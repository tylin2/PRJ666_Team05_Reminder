{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\PRJ666_Team05_Reminder\\\\client\\\\src\\\\pages\\\\tasks\\\\tasks.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Button = ReactBootstrap.Button;\nlet Modal = ReactBootstrap.Modal;\nlet Accordion = ReactBootstrap.Accordion;\nlet Panel = ReactBootstrap.Panel;\nlet FormGroup = ReactBootstrap.FormGroup;\nlet FormControl = ReactBootstrap.FormControl;\n\nclass AccordionContainer extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    let handleDeleteRecipe = this.props.handleDeleteRecipe;\n    let handleEditRecipe = this.props.handleEditRecipe;\n    let listRecipes = this.props.recipes.map(function (recipe, index) {\n      return /*#__PURE__*/_jsxDEV(Panel, {\n        header: recipe.title,\n        eventKey: index,\n        children: /*#__PURE__*/_jsxDEV(Recipe, {\n          recipe: recipe,\n          handleDeleteRecipe: handleDeleteRecipe,\n          handleEditRecipe: handleEditRecipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      children: listRecipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Recipe extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isEditing: true\n    };\n  }\n\n  deleteRecipe(e) {\n    this.props.handleDeleteRecipe(this.props.recipe.title);\n  }\n\n  render() {\n    let listIngredient = this.props.recipe.ingredients.map(function (ingredient, i) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.deleteRecipe.bind(this),\n          type: \"button\",\n          className: \"btn btn-default\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalPanel, {\n          handleEditRecipe: this.props.handleEditRecipe,\n          handleEditRecipe: this.props.handleEditRecipe,\n          isEditMode: true,\n          recipe: this.props.recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ModalPanel extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      title: \"\",\n      ingredients: []\n    };\n    this.modalStyle = {\n      height: 200\n    };\n  }\n\n  componentWillMount() {\n    this.props.isEditMode ? this.setState(this.props.recipe) : this.setState({\n      title: \"\",\n      ingredients: \"\"\n    });\n  }\n\n  close() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  open() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleRecipeSubmit(e) {\n    e.preventDefault();\n    let title = this.state.title;\n    let ingredients = this.state.ingredients;\n    this.props.handleAddRecipe(title, ingredients);\n    this.setState({\n      title: '',\n      ingredients: [],\n      showModal: false\n    });\n  }\n\n  onTitleChange(title) {\n    this.setState({\n      title: title\n    });\n  }\n\n  onIngredientsChange(ingredients) {\n    this.setState({\n      ingredients: ingredients\n    });\n  }\n\n  editRecipe(e) {\n    e.preventDefault();\n    let title = this.state.title;\n    let ingredients = this.state.ingredients;\n    this.props.handleEditRecipe(title, ingredients);\n    this.setState({\n      title: '',\n      ingredients: [],\n      showModal: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      style: this.modalStyle,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        bsStyle: \"primary\",\n        bsSize: \"large\",\n        onClick: this.open.bind(this),\n        children: this.props.isEditMode ? \"Edit\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.showModal,\n        onHide: this.close.bind(this),\n        container: this,\n        \"aria-labelledby\": \"contained-modal-title\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title\",\n            children: this.props.isEditMode ? this.props.recipe.title : \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            handleTitleChange: this.onTitleChange.bind(this),\n            handleIngredientsChange: this.onIngredientsChange.bind(this),\n            isEditMode: this.props.isEditMode,\n            recipe: this.props.isEditMode ? this.props.recipe : \"Enter Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.close.bind(this),\n            type: \"button\",\n            className: \"btn btn-lg btn-default\",\n            \"data-dismiss\": \"modal\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.isEditMode ? this.editRecipe.bind(this) : this.handleRecipeSubmit.bind(this),\n            type: \"button\",\n            className: \"btn btn-lg btn-primary\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      ingredients: []\n    };\n  }\n\n  onTitleChange(e) {\n    let title = e.target.value;\n    this.setState({\n      title: title\n    });\n    this.props.handleTitleChange(title);\n  }\n\n  onIngredientsChange(e) {\n    let ingredients = e.target.value.split(\",\");\n    this.setState({\n      ingredients: ingredients\n    });\n    this.props.handleIngredientsChange(ingredients);\n  }\n\n  componentWillMount() {\n    this.props.isEditMode ? this.setState(this.props.recipe) : this.setState({\n      title: \"Enter recipe title\",\n      ingredients: \"Enter ingredients separated by commas\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"title\",\n          children: \"Recipe Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          className: \"form-control\",\n          value: this.state.title,\n          onChange: this.onTitleChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"ingredients\",\n          children: \"Ingredients List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          id: \"ingredients\",\n          className: \"form-control\",\n          value: this.state.ingredients,\n          onChange: this.onIngredientsChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [{\n        title: \"Onion Pie\",\n        ingredients: [\"Onion\", \"Pie Crust\"]\n      }, {\n        title: \"Pizza\",\n        ingredients: [\"tomato\", \"cheese\"]\n      }]\n    };\n  }\n\n  addRecipe(title, ingredients = []) {\n    this.setState({\n      recipes: this.state.recipes.concat({\n        title,\n        ingredients\n      })\n    });\n  }\n\n  editRecipe(title, ingredients = []) {\n    this.setState({\n      recipes: this.state.recipes.map(function (recipe) {\n        return recipe.title === title ? {\n          title: title,\n          ingredients: ingredients\n        } : recipe;\n      })\n    });\n  }\n\n  deleteRecipe(title) {\n    this.setState({\n      recipes: this.state.recipes.filter(function (recipe) {\n        return recipe.title !== title;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AccordionContainer, {\n        recipes: this.state.recipes,\n        handleEditRecipe: this.editRecipe.bind(this),\n        handleDeleteRecipe: this.deleteRecipe.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalPanel, {\n        handleAddRecipe: this.addRecipe.bind(this),\n        isEditMode: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 211,\n  columnNumber: 17\n}, this), document.getElementById('app'));","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/PRJ666_Team05_Reminder/client/src/pages/tasks/tasks.js"],"names":["Button","ReactBootstrap","Modal","Accordion","Panel","FormGroup","FormControl","AccordionContainer","React","Component","constructor","render","handleDeleteRecipe","props","handleEditRecipe","listRecipes","recipes","map","recipe","index","title","Recipe","state","isEditing","deleteRecipe","e","listIngredient","ingredients","ingredient","i","bind","ModalPanel","showModal","modalStyle","height","componentWillMount","isEditMode","setState","close","open","handleRecipeSubmit","preventDefault","handleAddRecipe","onTitleChange","onIngredientsChange","editRecipe","Form","target","value","handleTitleChange","split","handleIngredientsChange","App","addRecipe","concat","filter","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["let Button = ReactBootstrap.Button;\r\nlet Modal = ReactBootstrap.Modal;\r\nlet Accordion = ReactBootstrap.Accordion;\r\nlet Panel = ReactBootstrap.Panel;\r\nlet FormGroup = ReactBootstrap.FormGroup;\r\nlet FormControl = ReactBootstrap.FormControl;\r\n\r\nclass AccordionContainer extends React.Component {\r\n   constructor(){\r\n    super();\r\n  }\r\n  render() {\r\n    let handleDeleteRecipe = this.props.handleDeleteRecipe;\r\n    let handleEditRecipe = this.props.handleEditRecipe;\r\n     let listRecipes = this.props.recipes.map(function(recipe, index){  \r\n      return(\r\n        <Panel header={recipe.title} eventKey={index} key={index}>\r\n          <Recipe recipe={recipe} handleDeleteRecipe={handleDeleteRecipe} handleEditRecipe={handleEditRecipe} />\r\n        </Panel>\r\n      );\r\n    });\r\n    return (\r\n      <Accordion>\r\n        {listRecipes}\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\nclass Recipe extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      isEditing: true\r\n    }\r\n  }\r\n  deleteRecipe(e) {\r\n    this.props.handleDeleteRecipe(this.props.recipe.title)\r\n  }\r\n  render(){\r\n    let listIngredient = this.props.recipe.ingredients.map(function(ingredient, i){\r\n        return (\r\n          <li key={i}>{ingredient}</li>\r\n        );\r\n      });\r\n    return (\r\n            <div>\r\n              <h3 className=\"text-center\">Ingredients</h3>\r\n              <ul>\r\n                {listIngredient}\r\n              </ul>\r\n              <div>\r\n                <button onClick={this.deleteRecipe.bind(this)} type=\"button\" className=\"btn btn-default\">Delete</button>\r\n                <ModalPanel handleEditRecipe={this.props.handleEditRecipe} handleEditRecipe={\r\n    this.props.handleEditRecipe} isEditMode={true} recipe={this.props.recipe}/>\r\n              </div>\r\n            </div>  \r\n    );\r\n  }\r\n}\r\n\r\nclass ModalPanel extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      showModal: false,\r\n      title: \"\",\r\n      ingredients: []\r\n    }\r\n    this.modalStyle = {\r\n      height: 200\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    this.props.isEditMode ? this.setState(this.props.recipe) : this.setState({title: \"\", ingredients: \"\"});\r\n  }\r\n  close() {\r\n    this.setState({ showModal: false });\r\n  }\r\n  open() {\r\n    this.setState({ showModal: true});\r\n  }\r\n  handleRecipeSubmit(e) {\r\n    e.preventDefault();\r\n    let title = this.state.title;\r\n    let ingredients = this.state.ingredients;\r\n    this.props.handleAddRecipe(title, ingredients);\r\n    this.setState({title: '', ingredients: [], showModal: false});\r\n  }\r\n  onTitleChange(title){\r\n    this.setState({title: title});\r\n  }\r\n  onIngredientsChange(ingredients){\r\n    this.setState({ingredients: ingredients});\r\n  }\r\n   editRecipe(e) {\r\n    e.preventDefault();\r\n    let title = this.state.title;\r\n    let ingredients = this.state.ingredients;\r\n    this.props.handleEditRecipe(title, ingredients);\r\n    this.setState({title: '', ingredients: [], showModal: false});\r\n  }\r\nrender(){\r\n    return (\r\n      <div className=\"modal-container\" style={this.modalStyle}>\r\n        <Button\r\n          bsStyle=\"primary\"\r\n          bsSize=\"large\"\r\n          onClick={this.open.bind(this)}\r\n        >\r\n          {this.props.isEditMode ? \"Edit\" : \"Add\"}\r\n        </Button>\r\n\r\n        <Modal\r\n          show={this.state.showModal}\r\n          onHide={this.close.bind(this)}\r\n          container={this}\r\n          aria-labelledby=\"contained-modal-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title\">{this.props.isEditMode ? this.props.recipe.title : \"Add\"}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form handleTitleChange={this.onTitleChange.bind(this)} handleIngredientsChange={this.onIngredientsChange.bind(this)} isEditMode={this.props.isEditMode} recipe={this.props.isEditMode ? this.props.recipe : \"Enter Ingredients\"} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button onClick={this.close.bind(this)} type=\"button\" className=\"btn btn-lg btn-default\" data-dismiss=\"modal\">Close</button>\r\n            <button onClick={this.props.isEditMode ? this.editRecipe.bind(this) : this.handleRecipeSubmit.bind(this)} type=\"button\" className=\"btn btn-lg btn-primary\">Save changes</button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Form extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      ingredients: []\r\n    };\r\n  }\r\n  onTitleChange(e) {\r\n    let title = e.target.value;\r\n    this.setState({title: title});\r\n    this.props.handleTitleChange(title);\r\n  }\r\n  onIngredientsChange(e) {\r\n    let ingredients = e.target.value.split(\",\");\r\n    this.setState({ingredients: ingredients});\r\n    this.props.handleIngredientsChange(ingredients)\r\n  }\r\n  componentWillMount(){\r\n    this.props.isEditMode ? this.setState(this.props.recipe) : this.setState({title: \"Enter recipe title\", ingredients: \"Enter ingredients separated by commas\" })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label for=\"title\">Recipe Title</label>\r\n          <input type=\"text\" id=\"title\" className=\"form-control\" value={this.state.title} onChange={this.onTitleChange.bind(this)}></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label for=\"ingredients\">Ingredients List</label>\r\n          <input type=\"textarea\" id=\"ingredients\" className=\"form-control\" value={this.state.ingredients} onChange={this.onIngredientsChange.bind(this)}></input>\r\n        </div>\r\n      </form>);     \r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n\t\tsuper();\r\n    this.state = { \r\n      recipes: \r\n        [\r\n          {\r\n            title: \"Onion Pie\", \r\n            ingredients:[\"Onion\", \"Pie Crust\"]\r\n          },\r\n          {\r\n            title: \"Pizza\", \r\n            ingredients:[\"tomato\", \"cheese\"]\r\n          }\r\n        ]\r\n    };\r\n  }\r\n  addRecipe(title, ingredients = []) {\r\n\t\tthis.setState({ recipes: this.state.recipes.concat({title, ingredients})});\r\n\t}\r\n  editRecipe(title, ingredients = []) {\t\t\t\r\n\t\tthis.setState({ recipes: this.state.recipes.map(function(recipe){\r\n      return recipe.title === title ? {title: title, ingredients: ingredients} : recipe;\r\n    })});\r\n\t}\r\n  deleteRecipe(title) {\r\n    this.setState({recipes: this.state.recipes.filter(function(recipe){\r\n      return recipe.title !== title;\r\n    })});\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n        <AccordionContainer recipes={this.state.recipes} handleEditRecipe={this.editRecipe.bind(this)} handleDeleteRecipe={this.deleteRecipe.bind(this)}/>\r\n        <ModalPanel handleAddRecipe={this.addRecipe.bind(this)} isEditMode={false}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}